{
  "version": 3,
  "file": "angular-cool-storage.umd.js",
  "sources": [
    "ng://@angular-cool/storage/projects/storage/src/lib/cool-storage.module.ts",
    "ng://@angular-cool/storage/projects/storage/src/lib/cool-session-storage.ts",
    "ng://@angular-cool/storage/projects/storage/src/lib/cool-local-storage.ts",
    "ng://@angular-cool/storage/projects/storage/src/lib/cool-server-storage.ts",
    "ng://@angular-cool/storage/projects/storage/src/lib/cool-storage-base.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CoolLocalStorage } from './cool-local-storage';\nimport { CoolSessionStorage } from './cool-session-storage';\n\n@NgModule({\n  providers: [\n    CoolLocalStorage,\n    CoolSessionStorage\n  ]\n})\nexport class CoolStorageModule {\n  /** @deprecated */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoolStorageModule,\n      providers: []\n    };\n  }\n}\n",
    "import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { CoolStorageBase } from './cool-storage-base';\nimport { CoolServerStorage } from './cool-server-storage';\n\n@Injectable()\nexport class CoolSessionStorage extends CoolStorageBase {\n  constructor(@Inject(PLATFORM_ID) platformId: any) {\n    if (isPlatformBrowser(platformId)) {\n      super(window.sessionStorage, 'SessionStorage');\n    } else {\n      super(new CoolServerStorage(), 'SessionStorage');\n    }\n  }\n}\n",
    "import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { CoolStorageBase } from './cool-storage-base';\nimport { CoolServerStorage } from './cool-server-storage';\n\n@Injectable()\nexport class CoolLocalStorage extends CoolStorageBase {\n  constructor(@Inject(PLATFORM_ID) platformId: any) {\n    if (isPlatformBrowser(platformId)) {\n      super(window.localStorage, 'LocalStorage');\n    } else {\n      super(new CoolServerStorage(), 'LocalStorage');\n    }\n  }\n}\n",
    "export class CoolServerStorage {\n  private _storageObject: any;\n\n  public constructor() {\n    this._storageObject = {};\n  }\n\n  public getItem(key: string): string {\n    return this._storageObject[key] || null;\n  }\n\n  public setItem(key: string, value: string): void {\n    this._storageObject[key] = value;\n  }\n\n  public removeItem(key: string): void {\n    this._storageObject[key] = undefined;\n  }\n\n  public key(index: number): string {\n    return this._storageObject.key(index);\n  }\n\n  public clear(): void {\n    this._storageObject = {};\n  }\n\n  public get length(): number {\n    return Object.keys(this._storageObject).length;\n  }\n}",
    "import { Observable, Subject } from 'rxjs';\nimport { StorageChangeArguments } from './storage-change-arguments.interface';\n\nexport abstract class CoolStorageBase {\n  private _storageObject: any;\n  private _itemSetSubject: Subject<StorageChangeArguments>;\n  private _itemRemovedSubject: Subject<StorageChangeArguments>;\n\n  protected constructor(storageObject: any, storageObjectName: string) {\n    if (!storageObject) {\n      throw new Error(`Current browser does not support ${ storageObjectName }`);\n    }\n\n    this._storageObject = storageObject;\n\n    this._itemSetSubject = new Subject<StorageChangeArguments>();\n    this._itemRemovedSubject = new Subject<StorageChangeArguments>();\n  }\n\n  public get itemSetObservable(): Observable<StorageChangeArguments> {\n    return this._itemSetSubject.asObservable();\n  }\n\n  public get itemRemovedObservable(): Observable<StorageChangeArguments> {\n    return this._itemRemovedSubject.asObservable();\n  }\n\n  public getItem(key: string): string {\n    return this._storageObject.getItem(key) || null;\n  }\n\n  public setItem(key: string, value: string): void {\n    this._itemSetSubject.next({\n      key,\n      value\n    });\n\n    this._setItemInStorage(key, value);\n  }\n\n  public removeItem(key: string): void {\n    let currentValue = this.tryGetObject(key);\n\n    if (!currentValue) {\n      currentValue = this.getItem(key);\n    }\n\n    this._itemRemovedSubject.next({\n      key,\n      value: currentValue\n    });\n\n    this._storageObject.removeItem(key);\n  }\n\n  public key(index: number): string {\n    return this._storageObject.key(index);\n  }\n\n  public clear(): void {\n    this._storageObject.clear();\n  }\n\n  public get length(): number {\n    return this._storageObject.length;\n  }\n\n  public getObject<T>(key: string): T {\n    let jsonInStorage = this.getItem(key);\n\n    if (jsonInStorage === null) {\n      return null;\n    }\n\n    return JSON.parse(jsonInStorage) as T;\n  }\n\n  public tryGetObject<T>(key: string): T {\n    try {\n      return this.getObject<T>(key);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public setObject(key: string, value: any): void {\n    this._itemSetSubject.next({\n      key,\n      value\n    });\n\n    this._setItemInStorage(key, JSON.stringify(value));\n  }\n\n  private _setItemInStorage(key: string, value: string) {\n    this._storageObject.setItem(key, value);\n  }\n}\n"
  ],
  "names": [
    "NgModule",
    "isPlatformBrowser",
    "Subject"
  ],
  "mappings": ";;;;;;;;;;IIAA;;;AAGA,QAAA,eAAA,kBAAA;;;;;QAKE,SAAF,eAAA,CAA0C,aAA1C,EAAA,iBAAA;YACI,IAAI,CAAC,aAAa,EAAE;gBAClB,MAAM,IAAI,KAAK,CAAC,mCAAtB,GAAA,iBAA+E,CAAC,CAAC;aAC5E;YAED,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YAEpC,IAAI,CAAC,eAAe,GAAG,IAAIE,YAAO,EAA0B,CAAC;YAC7D,IAAI,CAAC,mBAAmB,GAAG,IAAIA,YAAO,EAA0B,CAAC;SAClE;;;;;YAGC,GAAJ,EAAA;;;;;SAGA,CAAA,CAAA;QACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,uBAAA,EAAA;;;;;;aAGA;YACI,UAAJ,EAAgB,IAAhB;;;;;;;QAGS,eAAT,CAAA,SAAA,CAAA,OAAA,GAAA,UAAA,GAAA;YACI,OAAJ,IAAA,CAAA,cAA8B,CAA9B,OAAA,CAAA,GAAA,CAAA,IAAA,IAAA,CAAA;SACA,CAAA;;;;;;;;;gBAOA,KAAA,EAAA,KAAA;aACA,CAAA,CAAA;YAEI,IAAI,CAAC,iBAAT,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;SACA,CAAA;;;;;QAMA,eAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAA,GAAA;YAEI,qBAAJ,YAAA,GAAwC,IAAxC,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA;;;;;;gBAGA,KAAA,EAAA,YAAA;aACA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;YAYI,GAAJ,EAAA;gBAEQ,OAAR,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA;aACA;YACA,UAAA,EAAA,IAAA;YAEI,YAAJ,EAAA,IAAA;;;;;;;QAGS,eAAT,CAAoC,SAApC,CAAA,SAAA,GAAA,UAAA,GAAA;YACI,qBAAJ,aAAA,GAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;YACA,IAAM,aAAN,KAAA,IAA+B,EAA/B;gBACA,OAAA,IAAA,CAAA;aAAA;YACA,yBAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA;SACA,CAAA;;;;;;;YAGA,IAAA;gBACQ,OAAR,IAAA,CAAA,SAA6B,CAAC,GAA9B,CAAA,CAAA;aACA;YACA,wBAAA,CAAA,EAAA;gBACA,OAAA,IAAA,CAAA;aAEA;;;;;;;QAGU,eAAV,CAAA,SAAA,CAAA,SAAA,GAAA,UAAA,GAAA,EAAA,KAAA;YACI,IAAI,CAAC,eAAe,CAAxB,IAAA,CAAA;;gBAEA,KAAA,EAAA,KAAA;;;;;;;;;;;;;;;;;;IDjGA,IAAA,iBAAA,kBAAA;;YAII,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;;;;;;QAGpB,iBAAT,CAAA,SAAA,CAAA,OAAA,GAAA,UAAA,GAAA;YACI,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;;;;;;;QAGnC,iBAAT,CAA2C,SAA3C,CAAA,OAAA,GAAA,UAAA,GAAA,EAAA,KAAA;YACI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;;;;;;QAG5B,iBAAT,CAAA,SAAA,CAAA,UAAA,GAAA,UAAA,GAAA;YACI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;;;;;;QAGhC,iBAAT,CAAA,SAAA,CAAA,GAAA,GAAA,UAAA,KAAA;YACI,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;;;;QAGjC,iBAAT,CAAA,SAAA,CAAA,KAAA,GAAA;YACI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;;;;;;YAIzB,GAAJ,EAAA;;aAEA;;;;;;;;;;;QDpBA,SAAA,gBAAA,CAAA,UAAA;YACA,IAAA,KAAA,GAAA,IAAA,CAAA;YAAA,IAAAD,wBAAA,CAAA,UAAA,CAAA,EAAA;gBACM,KAAK,GAAX,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA,YAAmD,EAAE,cAArD,CAAA,IAAA,IAAA,CAAA;aACK;iBACL;;;YARA,OAAA,KAAA,CAAA;;;;IAEA;;;;;;;;;;;;;;QDEA,SAAA,kBAAA,CAAA,UAAA;YACA,IAAA,KAAA,GAAA,IAAA,CAAA;YAAA,IAAAA,wBAAA,CAAA,UAAA,CAAA,EAAA;gBACM,KAAK,GAAX,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA,cAAqD,EAAE,gBAAvD,CAAA,IAAA,IAAA,CAAA;aACK;iBACL;;;YARA,OAAA,KAAA,CAAA;;;;IAEA;;;;;;;;;;;;;ADRA,QAUA,iBAAA,kBAAA;;;;;;;QAIA,iBAAA,CAAgB,OAAhB,GAAA;YACA,OAAA;gBACA,QAAA,EAAA,iBAAA;;;;QAZA,OAAA,iBAAA,CAAU;IACV,CAAA,EAAA,CAAA,CAAA;IACA,iBACA,CAAA,UAAA,GAAA;QACA,EAAA,IAAA,EAAAD,aAAA,EAAA,IAAA,EAAA,CAAA;oBACA,SAAA,EAAA;;;;;;;;;;;;;;;;;;;;"
}
