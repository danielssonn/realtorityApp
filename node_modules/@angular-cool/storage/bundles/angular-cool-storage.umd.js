(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('tslib'), require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@angular-cool/storage', ['exports', 'rxjs', 'tslib', '@angular/core', '@angular/common'], factory) :
    (factory((global['angular-cool'] = global['angular-cool'] || {}, global['angular-cool'].storage = {}),null,global.tslib,global.ng.core,global.ng.common));
}(this, (function (exports,rxjs,tslib,core,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    /**
     * @abstract
     */
    var CoolStorageBase = /** @class */ (function () {
        /**
         * @param {?} storageObject
         * @param {?} storageObjectName
         */
        function CoolStorageBase(storageObject, storageObjectName) {
            if (!storageObject) {
                throw new Error("Current browser does not support " + storageObjectName);
            }
            this._storageObject = storageObject;
            this._itemSetSubject = new rxjs.Subject();
            this._itemRemovedSubject = new rxjs.Subject();
        }
        Object.defineProperty(CoolStorageBase.prototype, "itemSetObservable", {
            /**
             * @return {?}
             */
            get: function () {
                return this._itemSetSubject.asObservable();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CoolStorageBase.prototype, "itemRemovedObservable", {
            /**
             * @return {?}
             */
            get: function () {
                return this._itemRemovedSubject.asObservable();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} key
         * @return {?}
         */
        CoolStorageBase.prototype.getItem = function (key) {
            return this._storageObject.getItem(key) || null;
        };
        /**
         * @param {?} key
         * @param {?} value
         * @return {?}
         */
        CoolStorageBase.prototype.setItem = function (key, value) {
            this._itemSetSubject.next({
                key: key,
                value: value
            });
            this._setItemInStorage(key, value);
        };
        /**
         * @param {?} key
         * @return {?}
         */
        CoolStorageBase.prototype.removeItem = function (key) {
            var /** @type {?} */ currentValue = this.tryGetObject(key);
            if (!currentValue) {
                currentValue = this.getItem(key);
            }
            this._itemRemovedSubject.next({
                key: key,
                value: currentValue
            });
            this._storageObject.removeItem(key);
        };
        /**
         * @param {?} index
         * @return {?}
         */
        CoolStorageBase.prototype.key = function (index) {
            return this._storageObject.key(index);
        };
        /**
         * @return {?}
         */
        CoolStorageBase.prototype.clear = function () {
            this._storageObject.clear();
        };
        Object.defineProperty(CoolStorageBase.prototype, "length", {
            /**
             * @return {?}
             */
            get: function () {
                return this._storageObject.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @template T
         * @param {?} key
         * @return {?}
         */
        CoolStorageBase.prototype.getObject = function (key) {
            var /** @type {?} */ jsonInStorage = this.getItem(key);
            if (jsonInStorage === null) {
                return null;
            }
            return /** @type {?} */ (JSON.parse(jsonInStorage));
        };
        /**
         * @template T
         * @param {?} key
         * @return {?}
         */
        CoolStorageBase.prototype.tryGetObject = function (key) {
            try {
                return this.getObject(key);
            }
            catch ( /** @type {?} */e) {
                return null;
            }
        };
        /**
         * @param {?} key
         * @param {?} value
         * @return {?}
         */
        CoolStorageBase.prototype.setObject = function (key, value) {
            this._itemSetSubject.next({
                key: key,
                value: value
            });
            this._setItemInStorage(key, JSON.stringify(value));
        };
        /**
         * @param {?} key
         * @param {?} value
         * @return {?}
         */
        CoolStorageBase.prototype._setItemInStorage = function (key, value) {
            this._storageObject.setItem(key, value);
        };
        return CoolStorageBase;
    }());
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var CoolServerStorage = /** @class */ (function () {
        function CoolServerStorage() {
            this._storageObject = {};
        }
        /**
         * @param {?} key
         * @return {?}
         */
        CoolServerStorage.prototype.getItem = function (key) {
            return this._storageObject[key] || null;
        };
        /**
         * @param {?} key
         * @param {?} value
         * @return {?}
         */
        CoolServerStorage.prototype.setItem = function (key, value) {
            this._storageObject[key] = value;
        };
        /**
         * @param {?} key
         * @return {?}
         */
        CoolServerStorage.prototype.removeItem = function (key) {
            this._storageObject[key] = undefined;
        };
        /**
         * @param {?} index
         * @return {?}
         */
        CoolServerStorage.prototype.key = function (index) {
            return this._storageObject.key(index);
        };
        /**
         * @return {?}
         */
        CoolServerStorage.prototype.clear = function () {
            this._storageObject = {};
        };
        Object.defineProperty(CoolServerStorage.prototype, "length", {
            /**
             * @return {?}
             */
            get: function () {
                return Object.keys(this._storageObject).length;
            },
            enumerable: true,
            configurable: true
        });
        return CoolServerStorage;
    }());
    var CoolLocalStorage = /** @class */ (function (_super) {
        tslib.__extends(CoolLocalStorage, _super);
        /**
         * @param {?} platformId
         */
        function CoolLocalStorage(platformId) {
            var _this = this;
            if (common.isPlatformBrowser(platformId)) {
                _this = _super.call(this, window.localStorage, 'LocalStorage') || this;
            }
            else {
                _this = _super.call(this, new CoolServerStorage(), 'LocalStorage') || this;
            }
            return _this;
        }
        return CoolLocalStorage;
    }(CoolStorageBase));
    CoolLocalStorage.decorators = [
        { type: core.Injectable },
    ];
    /** @nocollapse */
    CoolLocalStorage.ctorParameters = function () {
        return [
            { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] },] },
        ];
    };
    var CoolSessionStorage = /** @class */ (function (_super) {
        tslib.__extends(CoolSessionStorage, _super);
        /**
         * @param {?} platformId
         */
        function CoolSessionStorage(platformId) {
            var _this = this;
            if (common.isPlatformBrowser(platformId)) {
                _this = _super.call(this, window.sessionStorage, 'SessionStorage') || this;
            }
            else {
                _this = _super.call(this, new CoolServerStorage(), 'SessionStorage') || this;
            }
            return _this;
        }
        return CoolSessionStorage;
    }(CoolStorageBase));
    CoolSessionStorage.decorators = [
        { type: core.Injectable },
    ];
    /** @nocollapse */
    CoolSessionStorage.ctorParameters = function () {
        return [
            { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] },] },
        ];
    };
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var CoolStorageModule = /** @class */ (function () {
        function CoolStorageModule() {
        }
        /**
         * @deprecated
         * @return {?}
         */
        CoolStorageModule.forRoot = function () {
            return {
                ngModule: CoolStorageModule,
                providers: []
            };
        };
        return CoolStorageModule;
    }());
    CoolStorageModule.decorators = [
        { type: core.NgModule, args: [{
                    providers: [
                        CoolLocalStorage,
                        CoolSessionStorage
                    ]
                },] },
    ];

    exports.CoolLocalStorage = CoolLocalStorage;
    exports.CoolSessionStorage = CoolSessionStorage;
    exports.CoolStorageModule = CoolStorageModule;
    exports.Éµa = CoolStorageBase;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-cool-storage.umd.js.map
