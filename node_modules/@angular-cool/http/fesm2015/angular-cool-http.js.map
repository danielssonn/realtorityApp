{
  "version": 3,
  "file": "angular-cool-http.js",
  "sources": [
    "ng://@angular-cool/http/projects/http/src/lib/cool-http.module.ts",
    "ng://@angular-cool/http/projects/http/src/lib/cool-http.service.ts",
    "ng://@angular-cool/http/projects/http/src/lib/request-options.interface.ts",
    "ng://@angular-cool/http/projects/http/src/lib/http-error.model.ts",
    "ng://@angular-cool/http/projects/http/src/lib/http-header.model.ts",
    "ng://@angular-cool/http/projects/http/src/lib/cookie-store.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CoolHttp } from './cool-http.service';\n\n@NgModule({\n  exports: [],\n  imports: [HttpClientModule],\n  providers: [CoolHttp]\n})\nexport class CoolHttpModule {\n  /** @deprecated */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoolHttpModule,\n      providers: []\n    };\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { HttpHeader } from './http-header.model';\nimport { CookieStore } from './cookie-store.service';\nimport { IRequestInterceptor } from './request-interceptor.interface';\nimport { IResponseInterceptor } from './response-interceptor.interface';\nimport { HttpError } from './http-error.model';\nimport { DEFAULT_REQUEST_OPTIONS, RequestOptions } from './request-options.interface';\nimport { from, Observable } from 'rxjs';\nimport { AngularRequestOptions } from './angular-request-options.interface';\n\nexport interface Func<T, T1, T2, TResult> {\n  (item: T, item1: T1, item2: T2): TResult;\n}\n\n@Injectable()\nexport class CoolHttp {\n  private _cookieStore: CookieStore = new CookieStore();\n\n  private _globalHeaders: HttpHeader[] = [];\n  private _requestInterceptors: IRequestInterceptor[] = [];\n  private _responseInterceptors: IResponseInterceptor[] = [];\n  private _customCookieToHeaders = [];\n  private _baseUrl;\n  private _withCredentials;\n\n  constructor(private _http: HttpClient) {\n  }\n\n  public get baseUrl(): string {\n    return this._baseUrl;\n  }\n\n  public registerBaseUrl(baseUrl: string): void {\n    this._baseUrl = baseUrl;\n\n    if (this._baseUrl[this._baseUrl.length - 1] !== '/') {\n      this._baseUrl += '/';\n    }\n  }\n\n  public deRegisterBaseUrl(): void {\n    this._baseUrl = null;\n  }\n\n  public setWithCredentials(status: boolean): void {\n    this._withCredentials = status;\n  }\n\n  public registerGlobalHeader(header: HttpHeader): void {\n    this.deregisterGlobalHeader(header.key);\n\n    this._globalHeaders.push(header);\n  }\n\n  public getGlobalHeaders(): HttpHeader[] {\n    return this._globalHeaders;\n  }\n\n  public deregisterGlobalHeader(headerKey: string): boolean {\n    const indexOfHeader = this._globalHeaders.findIndex(header => header.key === headerKey);\n\n    if (indexOfHeader === -1) {\n      return false;\n    }\n\n    this._globalHeaders.splice(indexOfHeader, 1);\n\n    return true;\n  }\n\n  public removeAllRegisteredGlobalHeaders(): void {\n    this._globalHeaders.length = 0;\n  }\n\n  public registerRequestInterceptor(requestInterceptor: IRequestInterceptor): void {\n    this._requestInterceptors.push(requestInterceptor);\n  }\n\n  public deregisterRequestInterceptor(requestInterceptor: IRequestInterceptor): boolean {\n    let indexOfItem = this._requestInterceptors.indexOf(requestInterceptor);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this._requestInterceptors.splice(indexOfItem, 1);\n\n    return true;\n  }\n\n  public registerResponseInterceptor(responseInterceptor: IResponseInterceptor): void {\n    this._responseInterceptors.push(responseInterceptor);\n  }\n\n  public deregisterResponseInterceptor(responseInterceptor: IResponseInterceptor): boolean {\n    let indexOfItem = this._responseInterceptors.indexOf(responseInterceptor);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this._responseInterceptors.splice(indexOfItem, 1);\n\n    return true;\n  }\n\n  public sendCookieValueInCustomHeader(cookieName: string, customHeaderName: string): void {\n    this._customCookieToHeaders.push({\n      cookieName: cookieName,\n      customHeaderName: customHeaderName\n    });\n  }\n\n  public async getAsync<T = any>(url: string, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Promise<T> {\n    let that = this;\n\n    return await that._requestCoreAsync<T>(url, 'GET', null, options, (url, data, modOptions) => {\n      return that._http.get(url, modOptions);\n    });\n  }\n\n  public async postAsync<T = any>(url: string, data?: any, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Promise<T> {\n    let that = this;\n\n    return await that._requestCoreAsync<T>(url, 'POST', data, options, (url, data, modOptions) => {\n      return that._http.post(url, data, modOptions);\n    });\n  }\n\n  public async putAsync<T = any>(url: string, data?: any, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Promise<T> {\n    let that = this;\n\n    return await that._requestCoreAsync<T>(url, 'PUT', data, options, (url, data, modOptions) => {\n      return that._http.put(url, data, modOptions);\n    });\n  }\n\n  public async deleteAsync<T = any>(url: string, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Promise<T> {\n    let that = this;\n\n    return await that._requestCoreAsync<T>(url, 'DELETE', null, options, (url, data, modOptions) => {\n      return that._http['delete'](url, modOptions);\n    });\n  }\n\n  public async patchAsync<T = any>(url: string, data?: any, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Promise<T> {\n    let that = this;\n\n    return await that._requestCoreAsync<T>(url, 'PATCH', data, options, (url, data, modOptions) => {\n      return that._http.patch(url, data, modOptions);\n    });\n  }\n\n  public async headAsync<T = any>(url: string, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Promise<T> {\n    let that = this;\n\n    return await that._requestCoreAsync<T>(url, 'HEAD', null, options, (url, data, modOptions) => {\n      return that._http.head(url, modOptions);\n    });\n  }\n\n  private async _requestCoreAsync<T = any>(url: string, method: string, data: any, options: RequestOptions, action: Func<string, any, AngularRequestOptions, Observable<HttpResponse<string>>>): Promise<T> {\n    url = this._convertUrl(url);\n\n    const modifiedOptions = this._modifyOptions(options);\n\n    let clientHeaders = this._convertAngularHeadersToHttpClientHeaders(<HttpHeaders>modifiedOptions.headers);\n\n    let shouldIntercept = await this._invokeRequestInterceptorsAsync(url, method, data, clientHeaders);\n\n    if (shouldIntercept) {\n      return;\n    }\n\n    modifiedOptions.headers = this._updateAngularHeadersFromHttpClientHeaders(clientHeaders, <HttpHeaders>modifiedOptions.headers);\n\n    let response: HttpResponse<string>;\n\n    try {\n      response = await action(url, data, modifiedOptions).toPromise();\n    } catch (errorResponse) {\n      response = errorResponse;\n    }\n\n    shouldIntercept = await this._invokeResponseInterceptorsAsync(response, url, method, data, clientHeaders);\n\n    if (shouldIntercept) {\n      return;\n    }\n\n    if (!response.ok) {\n      throw new HttpError(method, url, response.status, response.statusText, JSON.stringify(response.body));\n    }\n\n    let returnValue;\n\n    try {\n      returnValue = JSON.parse(response.body);\n    } catch (e) {\n      returnValue = {data: response.body};\n    }\n\n    return <T>returnValue;\n  }\n\n  public getObservable<T = any>(url: string, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Observable<T> {\n    let that = this;\n\n    return that._requestCoreObservable<T>(url, 'GET', null, options, (url, data, modOptions) => {\n      return that._http.get(url, modOptions);\n    });\n  }\n\n  public postObservable<T = any>(url: string, data: any, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Observable<T> {\n    let that = this;\n\n    return that._requestCoreObservable<T>(url, 'POST', data, options, (url, data, modOptions) => {\n      return that._http.post(url, data, modOptions);\n    });\n  }\n\n  public putObservable<T = any>(url: string, data: any, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Observable<T> {\n    let that = this;\n\n    return that._requestCoreObservable<T>(url, 'PUT', data, options, (url, data, modOptions) => {\n      return that._http.put(url, data, modOptions);\n    });\n  }\n\n  public deleteObservable<T = any>(url: string, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Observable<T> {\n    let that = this;\n\n    return that._requestCoreObservable<T>(url, 'DELETE', null, options, (url, data, modOptions) => {\n      return that._http['delete'](url, modOptions);\n    });\n  }\n\n  public patchObservable<T = any>(url: string, data: any, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Observable<T> {\n    let that = this;\n\n    return that._requestCoreObservable<T>(url, 'PATCH', data, options, (url, data, modOptions) => {\n      return that._http.patch(url, data, modOptions);\n    });\n  }\n\n  public headObservable<T = any>(url: string, options: RequestOptions = DEFAULT_REQUEST_OPTIONS): Observable<T> {\n    let that = this;\n\n    return that._requestCoreObservable<T>(url, 'HEAD', null, options, (url, data, modOptions) => {\n      return that._http.head(url, modOptions);\n    });\n  }\n\n  private _requestCoreObservable<T = any>(url: string, method: string, data: any, options: RequestOptions, action: Func<string, any, AngularRequestOptions, Observable<HttpResponse<string>>>): Observable<T> {\n    return from(this._requestCoreAsync(url, method, data, options, action));\n  }\n\n  private _convertUrl(url: string) {\n    let returnUrl = url;\n\n    if (this._baseUrl) {\n      returnUrl = this._baseUrl + returnUrl;\n    }\n\n    return returnUrl;\n  }\n\n  private _modifyOptions(options: RequestOptions): AngularRequestOptions {\n    const resultOptions: AngularRequestOptions = {\n      headers: options.headers || new HttpHeaders(),\n      observe: 'response',\n      params: options.params,\n      reportProgress: options.reportProgress,\n      responseType: 'text',\n      withCredentials: options.withCredentials || this._withCredentials,\n    };\n\n    options.headers = options.headers || new HttpHeaders();\n\n    resultOptions.headers = this._appendGlobalHeaders(<HttpHeaders>resultOptions.headers);\n\n    resultOptions.headers = this._tryAppendRegisteredCookiesToCustomHeaders(<HttpHeaders>resultOptions.headers);\n\n    return resultOptions;\n  }\n\n  private _appendGlobalHeaders(headers: HttpHeaders): HttpHeaders {\n    let newHeaders = headers;\n\n    for (const registeredHeader of this._globalHeaders) {\n      newHeaders = headers.set(registeredHeader.key, registeredHeader.value);\n    }\n\n    return newHeaders;\n  }\n\n  private _tryAppendRegisteredCookiesToCustomHeaders(headers: HttpHeaders): HttpHeaders {\n    let newHeaders = headers;\n\n    for (const cookieToHeader of this._customCookieToHeaders) {\n      const cookieValue = this._cookieStore.getCookie(cookieToHeader.cookieName);\n\n      if (cookieValue) {\n        newHeaders = headers.set(cookieToHeader.customHeaderName, cookieValue);\n      }\n    }\n\n    return newHeaders;\n  }\n\n  private async _invokeRequestInterceptorsAsync(url: string, method: string, data: any, headers: HttpHeader[]): Promise<boolean> {\n    for (const requestInterceptor of this._requestInterceptors) {\n      const shouldIntercept = await requestInterceptor.beforeRequestAsync(url, method, data, headers);\n\n      if (shouldIntercept) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private async _invokeResponseInterceptorsAsync(response: HttpResponse<Object>, url: string, method: string, data: any, headers: HttpHeader[]): Promise<boolean> {\n    for (const responseInterceptor of this._responseInterceptors) {\n      const shouldIntercept = await responseInterceptor.afterResponseAsync(response, url, method, data, headers);\n\n      if (shouldIntercept) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private _convertAngularHeadersToHttpClientHeaders(headers: HttpHeaders): HttpHeader[] {\n    return headers.keys().map(headerKey => {\n      const httpClientHeader = new HttpHeader();\n\n      httpClientHeader.key = headerKey;\n      httpClientHeader.value = headers.get(headerKey);\n\n      return httpClientHeader;\n    });\n  }\n\n  private _updateAngularHeadersFromHttpClientHeaders(httpClientHeaders: HttpHeader[], headers: HttpHeaders): HttpHeaders {\n    let newHeaders = headers;\n\n    for (const clientHeader of httpClientHeaders) {\n      const headerValue = headers.get(clientHeader.key);\n\n      if (headerValue !== clientHeader.value) {\n        newHeaders = headers.set(clientHeader.key, clientHeader.value);\n      }\n    }\n\n    return newHeaders;\n  }\n}\n",
    "import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport interface RequestOptions {\n  headers?: HttpHeaders | {\n    [header: string]: string | string[];\n  };\n  params?: HttpParams | {\n    [param: string]: string | string[];\n  };\n  reportProgress?: boolean;\n  withCredentials?: boolean;\n}\n\nexport const DEFAULT_REQUEST_OPTIONS: RequestOptions = {};\n",
    "export class HttpError extends Error {\n  constructor(public method: string,\n              public url: string,\n              public status: number,\n              public statusText: string,\n              public body: string) {\n    super(`Failed to call api ${method} ${url}, status code: ${status}`);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}",
    "export class HttpHeader {\n  key: string;\n\n  value: string;\n\n  constructor(key?: string, value?: string) {\n    this.key = key;\n    this.value = value;\n  }\n}",
    "export class CookieStore {\n  lastReadRawCookieCollection: string;\n\n  lastReadCookieCollection: any;\n\n  public getCookie(key: string): string {\n    let cookieCollection = this.getCookieCollection();\n\n    return cookieCollection[key];\n  }\n\n  public getCookieCollection(): any {\n    let currentRawCookie = document.cookie;\n\n    if (currentRawCookie === this.lastReadRawCookieCollection) {\n      return this.lastReadCookieCollection;\n    }\n\n    this.lastReadRawCookieCollection = currentRawCookie;\n    this.lastReadCookieCollection = {};\n\n    if (this.lastReadRawCookieCollection.indexOf('; ') !== -1) {\n      let cookies = this.lastReadRawCookieCollection.split('; ');\n\n      for (let cookie of cookies) {\n        let indexOfEqualSign = cookie.indexOf('=');\n\n        if (indexOfEqualSign > 0) {\n          let cookieName = CookieStore.tryDecodeUriComponent(cookie.substring(0, indexOfEqualSign));\n\n          this.lastReadCookieCollection[cookieName] = CookieStore.tryDecodeUriComponent(cookie.substring(indexOfEqualSign + 1));\n        }\n      }\n    }\n\n    return this.lastReadCookieCollection;\n  }\n\n  private static tryDecodeUriComponent(uriComponent: string): string {\n    try {\n      return decodeURIComponent(uriComponent);\n    }\n    catch (e) {\n      return uriComponent;\n    }\n  }\n}"
  ],
  "names": [],
  "mappings": "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"
}
