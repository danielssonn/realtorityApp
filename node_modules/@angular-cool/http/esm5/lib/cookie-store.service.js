import * as tslib_1 from "tslib";
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var CookieStore = /** @class */ (function () {
    function CookieStore() {
    }
    /**
     * @param {?} key
     * @return {?}
     */
    CookieStore.prototype.getCookie = function (key) {
        var /** @type {?} */ cookieCollection = this.getCookieCollection();
        return cookieCollection[key];
    };
    /**
     * @return {?}
     */
    CookieStore.prototype.getCookieCollection = function () {
        var e_1, _a;
        var /** @type {?} */ currentRawCookie = document.cookie;
        if (currentRawCookie === this.lastReadRawCookieCollection) {
            return this.lastReadCookieCollection;
        }
        this.lastReadRawCookieCollection = currentRawCookie;
        this.lastReadCookieCollection = {};
        if (this.lastReadRawCookieCollection.indexOf('; ') !== -1) {
            var /** @type {?} */ cookies = this.lastReadRawCookieCollection.split('; ');
            try {
                for (var cookies_1 = tslib_1.__values(cookies), cookies_1_1 = cookies_1.next(); !cookies_1_1.done; cookies_1_1 = cookies_1.next()) {
                    var cookie = cookies_1_1.value;
                    var /** @type {?} */ indexOfEqualSign = cookie.indexOf('=');
                    if (indexOfEqualSign > 0) {
                        var /** @type {?} */ cookieName = CookieStore.tryDecodeUriComponent(cookie.substring(0, indexOfEqualSign));
                        this.lastReadCookieCollection[cookieName] = CookieStore.tryDecodeUriComponent(cookie.substring(indexOfEqualSign + 1));
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (cookies_1_1 && !cookies_1_1.done && (_a = cookies_1.return)) _a.call(cookies_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        return this.lastReadCookieCollection;
    };
    /**
     * @param {?} uriComponent
     * @return {?}
     */
    CookieStore.tryDecodeUriComponent = function (uriComponent) {
        try {
            return decodeURIComponent(uriComponent);
        }
        catch ( /** @type {?} */e) {
            return uriComponent;
        }
    };
    return CookieStore;
}());
export { CookieStore };
function CookieStore_tsickle_Closure_declarations() {
    /** @type {?} */
    CookieStore.prototype.lastReadRawCookieCollection;
    /** @type {?} */
    CookieStore.prototype.lastReadCookieCollection;
}
//# sourceMappingURL=cookie-store.service.js.map
