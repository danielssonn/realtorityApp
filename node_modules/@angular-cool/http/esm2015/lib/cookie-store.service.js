/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export class CookieStore {
    /**
     * @param {?} key
     * @return {?}
     */
    getCookie(key) {
        let /** @type {?} */ cookieCollection = this.getCookieCollection();
        return cookieCollection[key];
    }
    /**
     * @return {?}
     */
    getCookieCollection() {
        let /** @type {?} */ currentRawCookie = document.cookie;
        if (currentRawCookie === this.lastReadRawCookieCollection) {
            return this.lastReadCookieCollection;
        }
        this.lastReadRawCookieCollection = currentRawCookie;
        this.lastReadCookieCollection = {};
        if (this.lastReadRawCookieCollection.indexOf('; ') !== -1) {
            let /** @type {?} */ cookies = this.lastReadRawCookieCollection.split('; ');
            for (let /** @type {?} */ cookie of cookies) {
                let /** @type {?} */ indexOfEqualSign = cookie.indexOf('=');
                if (indexOfEqualSign > 0) {
                    let /** @type {?} */ cookieName = CookieStore.tryDecodeUriComponent(cookie.substring(0, indexOfEqualSign));
                    this.lastReadCookieCollection[cookieName] = CookieStore.tryDecodeUriComponent(cookie.substring(indexOfEqualSign + 1));
                }
            }
        }
        return this.lastReadCookieCollection;
    }
    /**
     * @param {?} uriComponent
     * @return {?}
     */
    static tryDecodeUriComponent(uriComponent) {
        try {
            return decodeURIComponent(uriComponent);
        }
        catch (/** @type {?} */ e) {
            return uriComponent;
        }
    }
}
function CookieStore_tsickle_Closure_declarations() {
    /** @type {?} */
    CookieStore.prototype.lastReadRawCookieCollection;
    /** @type {?} */
    CookieStore.prototype.lastReadCookieCollection;
}
//# sourceMappingURL=cookie-store.service.js.map
