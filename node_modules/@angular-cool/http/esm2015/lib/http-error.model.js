/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
export class HttpError extends Error {
    /**
     * @param {?} method
     * @param {?} url
     * @param {?} status
     * @param {?} statusText
     * @param {?} body
     */
    constructor(method, url, status, statusText, body) {
        super(`Failed to call api ${method} ${url}, status code: ${status}`);
        this.method = method;
        this.url = url;
        this.status = status;
        this.statusText = statusText;
        this.body = body;
        // Set the prototype explicitly.
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
function HttpError_tsickle_Closure_declarations() {
    /** @type {?} */
    HttpError.prototype.method;
    /** @type {?} */
    HttpError.prototype.url;
    /** @type {?} */
    HttpError.prototype.status;
    /** @type {?} */
    HttpError.prototype.statusText;
    /** @type {?} */
    HttpError.prototype.body;
}
//# sourceMappingURL=http-error.model.js.map
